 forsec "dendrite[0]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[0].msg	} }  forsec "dendrite[24]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[1].msg	} }   forsec "dendrite[25]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[2].msg	} }   forsec "dendrite[28]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[3].msg	} }   forsec "dendrite[33]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[4].msg	} }    forsec "dendrite[34]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[5].msg	} }    forsec "dendrite[51]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[6].msg	} }    forsec "dendrite[1]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[7].msg	} }    forsec "dendrite[1]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[8].msg	} }     forsec "dendrite[14]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[9].msg	} }    forsec "dendrite[14]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[10].msg	} }    forsec "dendrite[26]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[11].msg	} }    forsec "dendrite[26]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[12].msg	} }     forsec "dendrite[27]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[13].msg	} }    forsec "dendrite[27]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[14].msg	} }    forsec "dendrite[29]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[15].msg	} }    forsec "dendrite[29]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[16].msg	} }     forsec "dendrite[32]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[17].msg	} }    forsec "dendrite[32]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[18].msg	} }    forsec "dendrite[35]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[19].msg	} }    forsec "dendrite[35]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[20].msg	} }     forsec "dendrite[42]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[21].msg	} }    forsec "dendrite[42]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[22].msg	} }    forsec "dendrite[52]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[23].msg	} }    forsec "dendrite[52]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[24].msg	} }     forsec "dendrite[53]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[25].msg	} }    forsec "dendrite[53]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[26].msg	} }    forsec "dendrite[54]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[27].msg	} }    forsec "dendrite[54]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[28].msg	} }     forsec "dendrite[2]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[29].msg	} }    forsec "dendrite[2]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[30].msg	} }    forsec "dendrite[9]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[31].msg	} }    forsec "dendrite[9]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[32].msg	} }     forsec "dendrite[15]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[33].msg	} }    forsec "dendrite[15]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[34].msg	} }    forsec "dendrite[18]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[35].msg	} }    forsec "dendrite[18]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[36].msg	} }     forsec "dendrite[23]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[37].msg	} }    forsec "dendrite[23]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[38].msg	} }    forsec "dendrite[30]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[39].msg	} }    forsec "dendrite[30]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[40].msg	} }     forsec "dendrite[31]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[41].msg	} }    forsec "dendrite[31]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[42].msg	} }    forsec "dendrite[36]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[43].msg	} }    forsec "dendrite[36]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[44].msg	} }     forsec "dendrite[39]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[45].msg	} }     forsec "dendrite[39]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[46].msg	} }    forsec "dendrite[43]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[47].msg	} }    forsec "dendrite[43]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[48].msg	} }    forsec "dendrite[44]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[49].msg	} }     forsec "dendrite[44]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[50].msg	} }    forsec "dendrite[3]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[51].msg	} }    forsec "dendrite[3]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[52].msg	} }    forsec "dendrite[3]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[53].msg	} }     forsec "dendrite[3]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[54].msg	} }    forsec "dendrite[8]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[55].msg	} }    forsec "dendrite[8]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[56].msg	} }    forsec "dendrite[8]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[57].msg	} }     forsec "dendrite[8]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[58].msg	} }     forsec "dendrite[10]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[59].msg	} }    forsec "dendrite[10]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[60].msg	} }    forsec "dendrite[10]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[61].msg	} }    forsec "dendrite[10]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[62].msg	} }     forsec "dendrite[11]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[63].msg	} }    forsec "dendrite[11]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[64].msg	} }    forsec "dendrite[11]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[65].msg	} }    forsec "dendrite[11]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[66].msg	} }     forsec "dendrite[16]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[67].msg	} }    forsec "dendrite[16]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[68].msg	} }    forsec "dendrite[16]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[69].msg	} }    forsec "dendrite[16]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[70].msg	} }         forsec "dendrite[17]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[71].msg	} }     forsec "dendrite[17]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[72].msg	} }       forsec "dendrite[17]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[73].msg	} }       forsec "dendrite[17]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[74].msg	} }       forsec "dendrite[19]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[75].msg	} }       forsec "dendrite[19]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[76].msg	} }       forsec "dendrite[19]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[77].msg	} }       forsec "dendrite[19]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[78].msg	} }       forsec "dendrite[20]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[79].msg	} }       forsec "dendrite[20]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[80].msg	} }     forsec "dendrite[20]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[81].msg	} }     forsec "dendrite[20]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[82].msg	} }    forsec "dendrite[37]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[83].msg	} }    forsec "dendrite[37]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[84].msg	} }    forsec "dendrite[37]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[85].msg	} }     forsec "dendrite[37]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[86].msg	} }    forsec "dendrite[38]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[87].msg	} }    forsec "dendrite[38]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[88].msg	} }    forsec "dendrite[38]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[89].msg	} }     forsec "dendrite[38]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[90].msg	} }    forsec "dendrite[40]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[91].msg	} }    forsec "dendrite[40]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[92].msg	} }    forsec "dendrite[40]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[93].msg	} }      forsec "dendrite[40]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[94].msg	} }    forsec "dendrite[41]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[95].msg	} }    forsec "dendrite[41]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[96].msg	} }    forsec "dendrite[41]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[97].msg	} }      forsec "dendrite[41]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[98].msg	} }    forsec "dendrite[45]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[99].msg	} }    forsec "dendrite[45]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[100].msg	} }     forsec "dendrite[45]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[101].msg	} }   forsec "dendrite[45]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[102].msg	} }    forsec "dendrite[50]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[103].msg	} }    forsec "dendrite[50]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[104].msg	} }    forsec "dendrite[50]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[105].msg	} }    forsec "dendrite[50]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[106].msg	} }    forsec "dendrite[4]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[107].msg	} }    forsec "dendrite[4]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[108].msg	} }    forsec "dendrite[4]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[109].msg	} }    forsec "dendrite[4]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[110].msg	} }    forsec "dendrite[7]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[111].msg	} }    forsec "dendrite[7]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[112].msg	} }    forsec "dendrite[7]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[113].msg	} }    forsec "dendrite[7]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[114].msg	} }    forsec "dendrite[12]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[115].msg	} }    forsec "dendrite[12]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[116].msg	} }    forsec "dendrite[12]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[117].msg	} }    forsec "dendrite[12]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[118].msg	} }    forsec "dendrite[13]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[119].msg	} }    forsec "dendrite[13]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[120].msg	} }     forsec "dendrite[13]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[121].msg	} }    forsec "dendrite[13]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[122].msg	} }    forsec "dendrite[21]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[123].msg	} }    forsec "dendrite[21]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[124].msg	} }    forsec "dendrite[21]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[125].msg	} }    forsec "dendrite[21]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[126].msg	} }    forsec "dendrite[22]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[127].msg	} }    forsec "dendrite[22]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[128].msg	} }    forsec "dendrite[22]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[129].msg	} }    forsec "dendrite[22]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[130].msg	} }    forsec "dendrite[46]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[131].msg	} }    forsec "dendrite[46]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[132].msg	} }    forsec "dendrite[46]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[133].msg	} }    forsec "dendrite[46]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[134].msg	} }    forsec "dendrite[47]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[135].msg	} }    forsec "dendrite[47]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[136].msg	} }    forsec "dendrite[47]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[137].msg	} }    forsec "dendrite[47]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[138].msg	} }    forsec "dendrite[5]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[139].msg	} }    forsec "dendrite[5]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[140].msg	} }    forsec "dendrite[5]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[141].msg	} }    forsec "dendrite[5]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[142].msg	} }    forsec "dendrite[6]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[143].msg	} }    forsec "dendrite[6]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[144].msg	} }    forsec "dendrite[6]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[145].msg	} }    forsec "dendrite[6]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[146].msg	} }    forsec "dendrite[48]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[147].msg	} }    forsec "dendrite[48]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[148].msg	} }    forsec "dendrite[48]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[149].msg	} }    forsec "dendrite[48]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[150].msg	} }      forsec "dendrite[49]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[151].msg	} }    forsec "dendrite[49]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[152].msg	} }    forsec "dendrite[49]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[153].msg	} }    forsec "dendrite[49]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[154].msg	} }    forsec "spine[0]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[155].msg	} }    forsec "spine[1]"{	for (x,0) { // skip the nodes at 0 and 1		setpointer mu_can(x), DAsyn[156].msg	} } 